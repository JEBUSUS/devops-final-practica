name: CI/CD

on:
  push:
    branches: [ "main" ]
  workflow_dispatch:

# Disponibiliza secrets como variables de entorno (para usarlas en steps)
env:
  DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
  DOCKERHUB_TOKEN: ${{ secrets.DOCKERHUB_TOKEN }}
  RENDER_HOOK_URL: ${{ secrets.RENDER_HOOK_URL }}
  IMAGE_NAME: ${{ secrets.DOCKERHUB_USERNAME }}/devops-final

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: '20'
      - name: Install deps
        run: npm install
      - name: Run tests
        run: npm test


  docker:
    needs: test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      # Los pasos de docker solo se ejecutan si hay secrets
      - name: Log in to Docker Hub
        if: ${{ env.DOCKERHUB_USERNAME != '' && env.DOCKERHUB_TOKEN != '' }}
        uses: docker/login-action@v3
        with:
          username: ${{ env.DOCKERHUB_USERNAME }}
          password: ${{ env.DOCKERHUB_TOKEN }}

      - name: Extract metadata (tags, labels)
        if: ${{ env.DOCKERHUB_USERNAME != '' && env.DOCKERHUB_TOKEN != '' }}
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.IMAGE_NAME }}
          tags: |
            type=raw,value=latest
            type=sha

      - name: Build and push
        if: ${{ env.DOCKERHUB_USERNAME != '' && env.DOCKERHUB_TOKEN != '' }}
        uses: docker/build-push-action@v6
        with:
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

  deploy:
    needs: docker
    runs-on: ubuntu-latest
    steps:
      - name: Check deploy hook
        run: |
          if [ -z "${{ env.RENDER_HOOK_URL }}" ]; then
            echo "RENDER_HOOK_URL not set -> skipping deploy";
          else
            echo "RENDER_HOOK_URL present -> will deploy";
          fi

      - name: Trigger Render deploy
        if: ${{ env.RENDER_HOOK_URL != '' }}
        run: curl -sSf -X POST "${{ env.RENDER_HOOK_URL }}"
